{"version":3,"sources":["Components/AddExerciseForm.js","Components/EditExerciseForm.js","Components/ExerciseModal.js","serviceWorker.js","index.js","App.js"],"names":["AddExerciseForm","props","initialFormState","key","name","weight","reps","comments","day","_useState","useState","_useState2","Object","slicedToArray","exercise","setExercise","handleChange","e","objectSpread","defineProperty","target","value","react_default","a","createElement","className","onSubmit","preventDefault","addExercise","htmlFor","type","onChange","disabled","isEditing","required","selected","hidden","EditExerciseForm","setTargetedExercise","targetedExercise","saveExercise","onClick","setIsEditing","ExerciseModal","modalIsOpen","closeModal","aria-label","removeExercise","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","daysOfWeekArray","_useState3","_useState4","exercises","setExercises","_useState5","_useState6","_useState7","_useState8","dayOfWeek","setDayOfWeek","_useState9","_useState10","setModalIsOpen","Date","getTime","concat","toConsumableArray","map","dayOfWeekArrayItem","index","openModal","filter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4bf8ce0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function AddExerciseForm(props) {\r\n\r\n  const initialFormState = { key: '', name: '', weight: '', reps: '', comments: '', day: '' }\r\n  const [exercise, setExercise] = useState(initialFormState);\r\n\r\n  function handleChange(e) {\r\n    setExercise({ ...exercise, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addExercise(exercise);\r\n    setExercise(initialFormState);\r\n  }\r\n\r\n  return(\r\n    <div className=\"column is-one-third\">\r\n      <form\r\n        onSubmit={handleSubmit}\r\n      >\r\n\r\n        <div className=\"field\">\r\n          <label\r\n            className=\"label\"\r\n            htmlFor=\"name\"\r\n          >Enter the name of your exercise\r\n          </label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={exercise.name}\r\n              onChange={handleChange}\r\n              disabled={props.isEditing ? true : false}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label\r\n            className=\"label\"\r\n            htmlFor=\"weight\"\r\n          >Enter the weight for your exercise\r\n          </label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"weight\"\r\n              value={exercise.weight}\r\n              onChange={handleChange}\r\n              disabled={props.isEditing ? true : false}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label\r\n            className=\"label\"\r\n            htmlFor=\"reps\"\r\n          >Enter the number of reps for your exercise\r\n          </label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"reps\"\r\n              value={exercise.reps}\r\n              onChange={handleChange}\r\n              disabled={props.isEditing ? true : false}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label\r\n            className=\"label\"\r\n            htmlFor=\"comments\"\r\n          >Additional details (optional)\r\n          </label>\r\n          <div className=\"control\">\r\n            <textarea\r\n              className=\"textarea\"\r\n              name=\"comments\"\r\n              value={exercise.comments}\r\n              onChange={handleChange}\r\n              disabled={props.isEditing ? true : false}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"select\">\r\n          <select\r\n            name=\"day\"\r\n            value={exercise.day}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\" disabled selected hidden>Select a day</option>\r\n            <option value=\"Sunday\">Sunday</option>\r\n            <option value=\"Monday\">Monday</option>\r\n            <option value=\"Tuesday\">Tuesday</option>\r\n            <option value=\"Wednesday\">Wednesday</option>\r\n            <option value=\"Thursday\">Thursday</option>\r\n            <option value=\"Friday\">Friday</option>\r\n            <option value=\"Saturday\">Saturday</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"button is-success\"\r\n          type=\"submit\"\r\n          disabled={props.isEditing ? true : false}\r\n        >Add Exercise\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function EditExerciseForm(props) {\r\n\r\n  function handleChange(e) {\r\n    props.setTargetedExercise({ ...props.targetedExercise, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.saveExercise(props.exercise.key);\r\n  }\r\n\r\n  return(\r\n    <form\r\n      onSubmit={handleSubmit}\r\n    >\r\n\r\n      <section className=\"modal-card-body\">\r\n        <div className=\"field\">\r\n          <label\r\n            className=\"label\"\r\n            htmlFor=\"name\"\r\n          >Exercise Name:\r\n          </label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={props.targetedExercise.name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label\r\n            className=\"label\"\r\n            htmlFor=\"weight\"\r\n          >Exercise Weight:\r\n          </label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"weight\"\r\n              value={props.targetedExercise.weight}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label\r\n            className=\"label\"\r\n            htmlFor=\"reps\"\r\n          >Exercise Reps:\r\n          </label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"reps\"\r\n              value={props.targetedExercise.reps}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label\r\n            className=\"label\"\r\n            htmlFor=\"comments\"\r\n          >Additional details:\r\n          </label>\r\n          <div className=\"control\">\r\n            <textarea\r\n              className=\"input\"\r\n              name=\"comments\"\r\n              value={props.targetedExercise.comments}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"select\">\r\n          <select\r\n            name=\"day\"\r\n            value={props.targetedExercise.day}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"Sunday\">Sunday</option>\r\n            <option value=\"Monday\">Monday</option>\r\n            <option value=\"Tuesday\">Tuesday</option>\r\n            <option value=\"Wednesday\">Wednesday</option>\r\n            <option value=\"Thursday\">Thursday</option>\r\n            <option value=\"Friday\">Friday</option>\r\n            <option value=\"Saturday\">Saturday</option>\r\n          </select>\r\n        </div>\r\n      </section>\r\n\r\n      <footer className=\"modal-card-foot\">\r\n        <button\r\n          className=\"button is-white\"\r\n          type=\"button\"\r\n          onClick={() => props.setIsEditing(false)}\r\n        >Cancel\r\n        </button>\r\n\r\n        <button\r\n          className=\"button is-success\"\r\n          type=\"submit\"\r\n          onClick={props.saveExercise}\r\n        >Save\r\n        </button>\r\n      </footer>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport EditExerciseForm from './EditExerciseForm';\r\n\r\nexport default function ExerciseModal(props) {\r\n  return(\r\n    <div className={props.modalIsOpen ? \"modal is-active\" : \"modal\"}>\r\n      <div\r\n        className=\"modal-background\"\r\n        onClick={props.closeModal}\r\n      ></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">{props.targetedExercise.name}</p>\r\n          <button\r\n            className=\"delete\"\r\n            aria-label=\"close\"\r\n            onClick={props.closeModal}\r\n          ></button>\r\n        </header>\r\n\r\n        {props.isEditing ? (\r\n          <EditExerciseForm\r\n            setTargetedExercise={props.setTargetedExercise}\r\n            targetedExercise={props.targetedExercise}\r\n            removeExercise={props.removeExercise}\r\n            saveExercise={props.saveExercise}\r\n            setIsEditing={props.setIsEditing}\r\n            exercise={props.exercise}\r\n          />\r\n        ) : (\r\n          <>\r\n            <section className=\"modal-card-body section\">\r\n              <p className=\"content has-text-weight-medium box\">Name: {props.targetedExercise.name}</p>\r\n              <p className=\"content has-text-weight-medium box\">Weight: {props.targetedExercise.weight}</p>\r\n              <p className=\"content has-text-weight-medium box\">Reps: {props.targetedExercise.reps}</p>\r\n              <p className=\"content has-text-weight-medium box\">Additional details: {props.targetedExercise.comments}</p>\r\n            </section>\r\n            <footer className=\"modal-card-foot\">\r\n              <button\r\n                className=\"button is-white\"\r\n                onClick={() => props.setIsEditing(true)}\r\n              >Edit\r\n              </button>\r\n\r\n              <button\r\n                className=\"button is-danger\"\r\n                onClick={props.removeExercise}\r\n              >Remove\r\n              </button>\r\n            </footer>\r\n          </>\r\n        )}\r\n    \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport AddExerciseForm from './Components/AddExerciseForm';\nimport ExerciseModal from './Components/ExerciseModal';\n\nexport default function App() {\n\n  const daysOfWeekArray = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const initialFormState = { key: '', name: '', weight: '', reps: '', comments: '', day: '' };\n  const [targetedExercise, setTargetedExercise] = useState(initialFormState);\n  const [exercises, setExercises] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [dayOfWeek, setDayOfWeek] = useState('Sunday');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  function addExercise(exercise) {\n    setIsEditing(false);\n    exercise.key = new Date().getTime();\n    setExercises([...exercises, exercise]);\n  }\n\n  function removeExercise() {\n    setExercises(exercises.filter(exercise => exercise.key !== targetedExercise.key));\n    closeModal();\n  }\n\n  function saveExercise() {\n    setExercises(exercises.map(exercise => (exercise.key === targetedExercise.key ? targetedExercise : exercise)));\n    setIsEditing(false);\n  }\n\n  function openModal(exercise) {\n    setModalIsOpen(true);\n    setTargetedExercise(exercise);\n  }\n\n  function closeModal() {\n    setModalIsOpen(false);\n    setTargetedExercise(initialFormState);\n    setIsEditing(false);\n  }\n\n  return(\n    <div>\n      <section className=\"hero is-medium bg-img\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title has-text-white\">Fitness Tracker</h1>\n            <h2 className=\"subtitle has-text-white\">Plan your workout for the week with this handy application. Enter\n            the exercise details below to add an exercise to your workout plan. Click on any exercise you've\n            added to view details and make changes.</h2>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"columns section has-background-white-ter\">\n        <AddExerciseForm \n          addExercise={addExercise}\n          isEditing={isEditing}\n          daysOfWeekArray={daysOfWeekArray}\n        />\n\n        <div className=\"column\"></div>\n\n        <section className=\"column is-three-fifths box\">\n          <div className=\"tabs is-centered is-fullwidth is-boxed\">\n            <ul>\n              {daysOfWeekArray.map( (dayOfWeekArrayItem, index) => (\n                <li\n                  key={index}\n                  className={dayOfWeek === dayOfWeekArrayItem ? \"is-active\" : null}\n                  onClick={() => setDayOfWeek(dayOfWeekArrayItem)}\n                >\n                  <a>{dayOfWeekArrayItem}</a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"tags are-large\">\n            {exercises.map( (exercise, index) => (\n              (dayOfWeek === exercise.day) ? (\n                <a\n                  className=\"tag is-link\"\n                  key={exercise.key}\n                  onClick={() => openModal(exercise)}\n                >\n                  {exercise.name}\n                </a>\n              ) : (\n                <></>\n              )\n            ))}\n\n            <ExerciseModal\n              setTargetedExercise={setTargetedExercise}\n              targetedExercise={targetedExercise}\n              removeExercise={removeExercise}\n              saveExercise={saveExercise}\n              setIsEditing={setIsEditing}\n              isEditing={isEditing}\n              modalIsOpen={modalIsOpen}\n              closeModal={closeModal}\n            />\n          </div>\n        </section>\n\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}